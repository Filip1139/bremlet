{"expireTime":9007200870664302000,"key":"http://bremlet.local/graphql--introspection-node-queries","val":{"categories":{"typeInfo":{"singularName":"category","pluralName":"categories","nodesTypeName":"Category"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){categories(first:$first,after:$after,){nodes{ancestors(first:100){nodes{id}}wpChildren:children(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}count databaseId description id link name wpParent:parent{node{id}}parentDatabaseId parentId posts(first:100){nodes{id}}seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug taxonomy{node{id}}termGroupId termTaxonomyId uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){category(id:$id){ancestors(first:100){nodes{id}}wpChildren:children(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}count databaseId description id link name wpParent:parent{node{id}}parentDatabaseId parentId posts(first:100){nodes{id}}seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug taxonomy{node{id}}termGroupId termTaxonomyId uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){category(id:$id,idType:ID,asPreview:true){ancestors(first:100){nodes{id}}wpChildren:children(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}count databaseId description id link name wpParent:parent{node{id}}parentDatabaseId parentId posts(first:100){nodes{id}}seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug taxonomy{node{id}}termGroupId termTaxonomyId uri __typename}}","selectionSet":" \n        ancestors (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        wpChildren: children (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        contentNodes (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    count\n    databaseId\n    description\n    id\n    link\n    name\n    \n        wpParent: parent  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    parentDatabaseId\n    parentId\n    \n        posts (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        seo  {\n           \n        breadcrumbs  {\n           text\n    url\n          \n        }\n      \n    canonical\n    cornerstone\n    focuskw\n    metaDesc\n    metaKeywords\n    metaRobotsNofollow\n    metaRobotsNoindex\n    opengraphAuthor\n    opengraphDescription\n    \n        opengraphImage  {\n           __typename\n    id\n          \n        }\n      \n    opengraphModifiedTime\n    opengraphPublishedTime\n    opengraphPublisher\n    opengraphSiteName\n    opengraphTitle\n    opengraphType\n    opengraphUrl\n    \n        schema  {\n           raw\n          \n        }\n      \n    title\n    twitterDescription\n    \n        twitterImage  {\n           __typename\n    id\n          \n        }\n      \n    twitterTitle\n          \n        }\n      \n    slug\n    \n        taxonomy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    termGroupId\n    termTaxonomyId\n    uri\n    __typename","builtFragments":"","settings":{}},"comments":{"typeInfo":{"singularName":"comment","pluralName":"comments","nodesTypeName":"Comment"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){comments(first:$first,after:$after,){nodes{agent approved author{node{id __typename}}authorIp commentedOn{node{id __typename}}content databaseId date dateGmt id karma wpParent:parent{node{id}}parentDatabaseId parentId replies(first:100){nodes{id}}type __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){comment(id:$id){agent approved author{node{id __typename}}authorIp commentedOn{node{id __typename}}content databaseId date dateGmt id karma wpParent:parent{node{id}}parentDatabaseId parentId replies(first:100){nodes{id}}type __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){comment(id:$id,idType:ID,asPreview:true){agent approved author{node{id __typename}}authorIp commentedOn{node{id __typename}}content databaseId date dateGmt id karma wpParent:parent{node{id}}parentDatabaseId parentId replies(first:100){nodes{id}}type __typename}}","selectionSet":" agent\n    approved\n    \n        author  {\n           \n        node  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    authorIp\n    \n        commentedOn  {\n           \n        node  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    content\n    databaseId\n    date\n    dateGmt\n    id\n    karma\n    \n        wpParent: parent  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    parentDatabaseId\n    parentId\n    \n        replies (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    type\n    __typename","builtFragments":"","settings":{}},"contentTypes":{"typeInfo":{"singularName":"contentType","pluralName":"contentTypes","nodesTypeName":"ContentType"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){contentTypes(first:$first,after:$after,){nodes{archivePath canExport connectedTaxonomies(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}deleteWithUser description excludeFromSearch graphqlPluralName graphqlSingleName hasArchive hierarchical id isFrontPage isPostsPage label labels{addNew addNewItem allItems archives attributes editItem featuredImage filterItemsList insertIntoItem itemsList itemsListNavigation menuName name newItem notFound notFoundInTrash parentItemColon removeFeaturedImage searchItems setFeaturedImage singularName uploadedToThisItem useFeaturedImage viewItem viewItems}menuIcon menuPosition name public publiclyQueryable restBase restControllerClass showInAdminBar showInGraphql showInMenu showInNavMenus showInRest showUi uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){contentType(id:$id){archivePath canExport connectedTaxonomies(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}deleteWithUser description excludeFromSearch graphqlPluralName graphqlSingleName hasArchive hierarchical id isFrontPage isPostsPage label labels{addNew addNewItem allItems archives attributes editItem featuredImage filterItemsList insertIntoItem itemsList itemsListNavigation menuName name newItem notFound notFoundInTrash parentItemColon removeFeaturedImage searchItems setFeaturedImage singularName uploadedToThisItem useFeaturedImage viewItem viewItems}menuIcon menuPosition name public publiclyQueryable restBase restControllerClass showInAdminBar showInGraphql showInMenu showInNavMenus showInRest showUi uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){contentType(id:$id,idType:ID,asPreview:true){archivePath canExport connectedTaxonomies(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}deleteWithUser description excludeFromSearch graphqlPluralName graphqlSingleName hasArchive hierarchical id isFrontPage isPostsPage label labels{addNew addNewItem allItems archives attributes editItem featuredImage filterItemsList insertIntoItem itemsList itemsListNavigation menuName name newItem notFound notFoundInTrash parentItemColon removeFeaturedImage searchItems setFeaturedImage singularName uploadedToThisItem useFeaturedImage viewItem viewItems}menuIcon menuPosition name public publiclyQueryable restBase restControllerClass showInAdminBar showInGraphql showInMenu showInNavMenus showInRest showUi uri __typename}}","selectionSet":" archivePath\n    canExport\n    \n        connectedTaxonomies (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        contentNodes (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    deleteWithUser\n    description\n    excludeFromSearch\n    graphqlPluralName\n    graphqlSingleName\n    hasArchive\n    hierarchical\n    id\n    isFrontPage\n    isPostsPage\n    label\n    \n        labels  {\n           addNew\n    addNewItem\n    allItems\n    archives\n    attributes\n    editItem\n    featuredImage\n    filterItemsList\n    insertIntoItem\n    itemsList\n    itemsListNavigation\n    menuName\n    name\n    newItem\n    notFound\n    notFoundInTrash\n    parentItemColon\n    removeFeaturedImage\n    searchItems\n    setFeaturedImage\n    singularName\n    uploadedToThisItem\n    useFeaturedImage\n    viewItem\n    viewItems\n          \n        }\n      \n    menuIcon\n    menuPosition\n    name\n    public\n    publiclyQueryable\n    restBase\n    restControllerClass\n    showInAdminBar\n    showInGraphql\n    showInMenu\n    showInNavMenus\n    showInRest\n    showUi\n    uri\n    __typename","builtFragments":"","settings":{}},"kolekcje":{"typeInfo":{"singularName":"kolekcja","pluralName":"kolekcje","nodesTypeName":"Kolekcja"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){kolekcje(first:$first,after:$after,){nodes{ancestors(first:100){nodes{id}}wpChildren:children(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}count databaseId description id link name wpParent:parent{node{id}}parentDatabaseId parentId produkty(first:100){nodes{id}}seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug taxonomy{node{id}}termGroupId termTaxonomyId uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){kolekcja(id:$id){ancestors(first:100){nodes{id}}wpChildren:children(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}count databaseId description id link name wpParent:parent{node{id}}parentDatabaseId parentId produkty(first:100){nodes{id}}seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug taxonomy{node{id}}termGroupId termTaxonomyId uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){kolekcja(id:$id,idType:ID,asPreview:true){ancestors(first:100){nodes{id}}wpChildren:children(first:100){nodes{id}}contentNodes(first:100){nodes{id __typename}}count databaseId description id link name wpParent:parent{node{id}}parentDatabaseId parentId produkty(first:100){nodes{id}}seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug taxonomy{node{id}}termGroupId termTaxonomyId uri __typename}}","selectionSet":" \n        ancestors (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        wpChildren: children (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        contentNodes (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    count\n    databaseId\n    description\n    id\n    link\n    name\n    \n        wpParent: parent  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    parentDatabaseId\n    parentId\n    \n        produkty (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        seo  {\n           \n        breadcrumbs  {\n           text\n    url\n          \n        }\n      \n    canonical\n    cornerstone\n    focuskw\n    metaDesc\n    metaKeywords\n    metaRobotsNofollow\n    metaRobotsNoindex\n    opengraphAuthor\n    opengraphDescription\n    \n        opengraphImage  {\n           __typename\n    id\n          \n        }\n      \n    opengraphModifiedTime\n    opengraphPublishedTime\n    opengraphPublisher\n    opengraphSiteName\n    opengraphTitle\n    opengraphType\n    opengraphUrl\n    \n        schema  {\n           raw\n          \n        }\n      \n    title\n    twitterDescription\n    \n        twitterImage  {\n           __typename\n    id\n          \n        }\n      \n    twitterTitle\n          \n        }\n      \n    slug\n    \n        taxonomy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    termGroupId\n    termTaxonomyId\n    uri\n    __typename","builtFragments":"","settings":{}},"mediaItems":{"typeInfo":{"singularName":"mediaItem","pluralName":"mediaItems","nodesTypeName":"MediaItem"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){mediaItems(first:$first,after:$after,){nodes{altText ancestors(first:100){nodes{id __typename}}author{node{id}}authorDatabaseId authorId caption wpChildren:children(first:100){nodes{id __typename}}commentCount commentStatus comments(first:100){nodes{id}}contentType{node{id}}databaseId date dateGmt description desiredSlug enclosure fileSize guid id lastEditedBy{node{id}}link mediaDetails{file height meta{aperture camera caption copyright createdTimestamp credit focalLength iso keywords orientation shutterSpeed title}sizes{file fileSize height mimeType name sourceUrl width}width}mediaItemUrl mediaType mimeType modified modifiedGmt wpParent:parent{node{id __typename}}parentDatabaseId parentId seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{articleType pageType raw}title twitterDescription twitterImage{__typename id}twitterTitle}sizes slug sourceUrl srcSet status template{templateName __typename}title uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){mediaItem(id:$id){altText ancestors(first:100){nodes{id __typename}}author{node{id}}authorDatabaseId authorId caption wpChildren:children(first:100){nodes{id __typename}}commentCount commentStatus comments(first:100){nodes{id}}contentType{node{id}}databaseId date dateGmt description desiredSlug enclosure fileSize guid id lastEditedBy{node{id}}link mediaDetails{file height meta{aperture camera caption copyright createdTimestamp credit focalLength iso keywords orientation shutterSpeed title}sizes{file fileSize height mimeType name sourceUrl width}width}mediaItemUrl mediaType mimeType modified modifiedGmt wpParent:parent{node{id __typename}}parentDatabaseId parentId seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{articleType pageType raw}title twitterDescription twitterImage{__typename id}twitterTitle}sizes slug sourceUrl srcSet status template{templateName __typename}title uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){mediaItem(id:$id,idType:ID,asPreview:true){altText ancestors(first:100){nodes{id __typename}}author{node{id}}authorDatabaseId authorId caption wpChildren:children(first:100){nodes{id __typename}}commentCount commentStatus comments(first:100){nodes{id}}contentType{node{id}}databaseId date dateGmt description desiredSlug enclosure fileSize guid id lastEditedBy{node{id}}link mediaDetails{file height meta{aperture camera caption copyright createdTimestamp credit focalLength iso keywords orientation shutterSpeed title}sizes{file fileSize height mimeType name sourceUrl width}width}mediaItemUrl mediaType mimeType modified modifiedGmt wpParent:parent{node{id __typename}}parentDatabaseId parentId seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{articleType pageType raw}title twitterDescription twitterImage{__typename id}twitterTitle}sizes slug sourceUrl srcSet status template{templateName __typename}title uri __typename}}","selectionSet":" altText\n    \n        ancestors (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    \n        author  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    authorDatabaseId\n    authorId\n    caption\n    \n        wpChildren: children (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    commentCount\n    commentStatus\n    \n        comments (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        contentType  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    databaseId\n    date\n    dateGmt\n    description\n    desiredSlug\n    enclosure\n    fileSize\n    guid\n    id\n    \n        lastEditedBy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    link\n    \n        mediaDetails  {\n           file\n    height\n    \n        meta  {\n           aperture\n    camera\n    caption\n    copyright\n    createdTimestamp\n    credit\n    focalLength\n    iso\n    keywords\n    orientation\n    shutterSpeed\n    title\n          \n        }\n      \n    \n        sizes  {\n           file\n    fileSize\n    height\n    mimeType\n    name\n    sourceUrl\n    width\n          \n        }\n      \n    width\n          \n        }\n      \n    mediaItemUrl\n    mediaType\n    mimeType\n    modified\n    modifiedGmt\n    \n        wpParent: parent  {\n           \n        node  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    parentDatabaseId\n    parentId\n    \n        seo  {\n           \n        breadcrumbs  {\n           text\n    url\n          \n        }\n      \n    canonical\n    cornerstone\n    focuskw\n    metaDesc\n    metaKeywords\n    metaRobotsNofollow\n    metaRobotsNoindex\n    opengraphAuthor\n    opengraphDescription\n    \n        opengraphImage  {\n           __typename\n    id\n          \n        }\n      \n    opengraphModifiedTime\n    opengraphPublishedTime\n    opengraphPublisher\n    opengraphSiteName\n    opengraphTitle\n    opengraphType\n    opengraphUrl\n    \n        schema  {\n           articleType\n    pageType\n    raw\n          \n        }\n      \n    title\n    twitterDescription\n    \n        twitterImage  {\n           __typename\n    id\n          \n        }\n      \n    twitterTitle\n          \n        }\n      \n    sizes\n    slug\n    sourceUrl\n    srcSet\n    status\n    \n        template  {\n           templateName\n          \n      __typename\n      \n    \n        }\n      \n    title\n    uri\n    __typename","builtFragments":"","settings":{"lazyNodes":false,"localFile":{"excludeByMimeTypes":[],"maxFileSizeBytes":15728640,"requestConcurrency":100}}},"menuItems":{"typeInfo":{"singularName":"menuItem","pluralName":"menuItems","nodesTypeName":"MenuItem"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){menuItems(first:$first,after:$after,){nodes{childItems(first:100){nodes{id}}connectedNode{node{id __typename}}cssClasses databaseId description id label linkRelationship locations menu{node{id}}order parentDatabaseId parentId path target title url __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){menuItem(id:$id){childItems(first:100){nodes{id}}connectedNode{node{id __typename}}cssClasses databaseId description id label linkRelationship locations menu{node{id}}order parentDatabaseId parentId path target title url __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){menuItem(id:$id,idType:ID,asPreview:true){childItems(first:100){nodes{id}}connectedNode{node{id __typename}}cssClasses databaseId description id label linkRelationship locations menu{node{id}}order parentDatabaseId parentId path target title url __typename}}","selectionSet":" \n        childItems (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        connectedNode  {\n           \n        node  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    cssClasses\n    databaseId\n    description\n    id\n    label\n    linkRelationship\n    locations\n    \n        menu  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    order\n    parentDatabaseId\n    parentId\n    path\n    target\n    title\n    url\n    __typename","builtFragments":"","settings":{}},"menus":{"typeInfo":{"singularName":"menu","pluralName":"menus","nodesTypeName":"Menu"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){menus(first:$first,after:$after,){nodes{count databaseId id locations menuItems(first:100){nodes{id}}name slug __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){menu(id:$id){count databaseId id locations menuItems(first:100){nodes{id}}name slug __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){menu(id:$id,idType:ID,asPreview:true){count databaseId id locations menuItems(first:100){nodes{id}}name slug __typename}}","selectionSet":" count\n    databaseId\n    id\n    locations\n    \n        menuItems (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    name\n    slug\n    __typename","builtFragments":"","settings":{}},"pages":{"typeInfo":{"singularName":"page","pluralName":"pages","nodesTypeName":"Page"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){pages(first:$first,after:$after,){nodes{HomeACF{collection{collectionDesc collectionImg{__typename id}collectionLink{target title url}collectionNam fieldGroupName}collectionCta{fieldGroupName img{__typename id}text textAccent title}collectionSecond{collectionDesc collectionImg{__typename id}collectionLink{target title url}collectionNam fieldGroupName}fieldGroupName heroBg{__typename id}heroBgMobile{__typename id}heroCta{target title url}heroHeading overlapBtn{target title url}overlapImg1{__typename id}overlapImg2{__typename id}overlapText textImgGroup{fieldGroupName img{__typename id}img2{__typename id}img3{__typename id}text}}SubpageACF{blokrepeater{desc fieldGroupName title}count fieldGroupName pagetype textwysywig}aboutACF{boxes{boxImg{__typename id}desc fieldGroupName title}fieldGroupName firstImgGroup{descFirst fieldGroupName img{__typename id}img2{__typename id}img3{__typename id}textFirst}hero{bgImg{__typename id}desc fieldGroupName heading}onlyImg{__typename id}textImgGroupSecond{desc fieldGroupName img{__typename id}img2{__typename id}img3{__typename id}text}twoImgs{bigImg{__typename id}desc fieldGroupName smallImg{__typename id}}verticalImgGroup{bg{__typename id}desc fieldGroupName}}ancestors(first:100){nodes{id __typename}}author{node{id}}authorDatabaseId authorId wpChildren:children(first:100){nodes{id __typename}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId guid id isFrontPage isPostsPage isPrivacyPage isRevision lastEditedBy{node{id}}link menuOrder modified modifiedGmt wpParent:parent{node{id __typename}}parentDatabaseId parentId seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{articleType pageType raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug status template{templateName __typename}title uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){page(id:$id){HomeACF{collection{collectionDesc collectionImg{__typename id}collectionLink{target title url}collectionNam fieldGroupName}collectionCta{fieldGroupName img{__typename id}text textAccent title}collectionSecond{collectionDesc collectionImg{__typename id}collectionLink{target title url}collectionNam fieldGroupName}fieldGroupName heroBg{__typename id}heroBgMobile{__typename id}heroCta{target title url}heroHeading overlapBtn{target title url}overlapImg1{__typename id}overlapImg2{__typename id}overlapText textImgGroup{fieldGroupName img{__typename id}img2{__typename id}img3{__typename id}text}}SubpageACF{blokrepeater{desc fieldGroupName title}count fieldGroupName pagetype textwysywig}aboutACF{boxes{boxImg{__typename id}desc fieldGroupName title}fieldGroupName firstImgGroup{descFirst fieldGroupName img{__typename id}img2{__typename id}img3{__typename id}textFirst}hero{bgImg{__typename id}desc fieldGroupName heading}onlyImg{__typename id}textImgGroupSecond{desc fieldGroupName img{__typename id}img2{__typename id}img3{__typename id}text}twoImgs{bigImg{__typename id}desc fieldGroupName smallImg{__typename id}}verticalImgGroup{bg{__typename id}desc fieldGroupName}}ancestors(first:100){nodes{id __typename}}author{node{id}}authorDatabaseId authorId wpChildren:children(first:100){nodes{id __typename}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId guid id isFrontPage isPostsPage isPrivacyPage isRevision lastEditedBy{node{id}}link menuOrder modified modifiedGmt wpParent:parent{node{id __typename}}parentDatabaseId parentId seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{articleType pageType raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug status template{templateName __typename}title uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){page(id:$id,idType:ID,asPreview:true){HomeACF{collection{collectionDesc collectionImg{__typename id}collectionLink{target title url}collectionNam fieldGroupName}collectionCta{fieldGroupName img{__typename id}text textAccent title}collectionSecond{collectionDesc collectionImg{__typename id}collectionLink{target title url}collectionNam fieldGroupName}fieldGroupName heroBg{__typename id}heroBgMobile{__typename id}heroCta{target title url}heroHeading overlapBtn{target title url}overlapImg1{__typename id}overlapImg2{__typename id}overlapText textImgGroup{fieldGroupName img{__typename id}img2{__typename id}img3{__typename id}text}}SubpageACF{blokrepeater{desc fieldGroupName title}count fieldGroupName pagetype textwysywig}aboutACF{boxes{boxImg{__typename id}desc fieldGroupName title}fieldGroupName firstImgGroup{descFirst fieldGroupName img{__typename id}img2{__typename id}img3{__typename id}textFirst}hero{bgImg{__typename id}desc fieldGroupName heading}onlyImg{__typename id}textImgGroupSecond{desc fieldGroupName img{__typename id}img2{__typename id}img3{__typename id}text}twoImgs{bigImg{__typename id}desc fieldGroupName smallImg{__typename id}}verticalImgGroup{bg{__typename id}desc fieldGroupName}}ancestors(first:100){nodes{id __typename}}author{node{id}}authorDatabaseId authorId wpChildren:children(first:100){nodes{id __typename}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId guid id isFrontPage isPostsPage isPrivacyPage isRevision lastEditedBy{node{id}}link menuOrder modified modifiedGmt wpParent:parent{node{id __typename}}parentDatabaseId parentId seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{articleType pageType raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug status template{templateName __typename}title uri __typename}}","selectionSet":" \n        HomeACF  {\n           \n        collection  {\n           collectionDesc\n    \n        collectionImg  {\n           __typename\n    id\n          \n        }\n      \n    \n        collectionLink  {\n           target\n    title\n    url\n          \n        }\n      \n    collectionNam\n    fieldGroupName\n          \n        }\n      \n    \n        collectionCta  {\n           fieldGroupName\n    \n        img  {\n           __typename\n    id\n          \n        }\n      \n    text\n    textAccent\n    title\n          \n        }\n      \n    \n        collectionSecond  {\n           collectionDesc\n    \n        collectionImg  {\n           __typename\n    id\n          \n        }\n      \n    \n        collectionLink  {\n           target\n    title\n    url\n          \n        }\n      \n    collectionNam\n    fieldGroupName\n          \n        }\n      \n    fieldGroupName\n    \n        heroBg  {\n           __typename\n    id\n          \n        }\n      \n    \n        heroBgMobile  {\n           __typename\n    id\n          \n        }\n      \n    \n        heroCta  {\n           target\n    title\n    url\n          \n        }\n      \n    heroHeading\n    \n        overlapBtn  {\n           target\n    title\n    url\n          \n        }\n      \n    \n        overlapImg1  {\n           __typename\n    id\n          \n        }\n      \n    \n        overlapImg2  {\n           __typename\n    id\n          \n        }\n      \n    overlapText\n    \n        textImgGroup  {\n           fieldGroupName\n    \n        img  {\n           __typename\n    id\n          \n        }\n      \n    \n        img2  {\n           __typename\n    id\n          \n        }\n      \n    \n        img3  {\n           __typename\n    id\n          \n        }\n      \n    text\n          \n        }\n      \n          \n        }\n      \n    \n        SubpageACF  {\n           \n        blokrepeater  {\n           desc\n    fieldGroupName\n    title\n          \n        }\n      \n    count\n    fieldGroupName\n    pagetype\n    textwysywig\n          \n        }\n      \n    \n        aboutACF  {\n           \n        boxes  {\n           \n        boxImg  {\n           __typename\n    id\n          \n        }\n      \n    desc\n    fieldGroupName\n    title\n          \n        }\n      \n    fieldGroupName\n    \n        firstImgGroup  {\n           descFirst\n    fieldGroupName\n    \n        img  {\n           __typename\n    id\n          \n        }\n      \n    \n        img2  {\n           __typename\n    id\n          \n        }\n      \n    \n        img3  {\n           __typename\n    id\n          \n        }\n      \n    textFirst\n          \n        }\n      \n    \n        hero  {\n           \n        bgImg  {\n           __typename\n    id\n          \n        }\n      \n    desc\n    fieldGroupName\n    heading\n          \n        }\n      \n    \n        onlyImg  {\n           __typename\n    id\n          \n        }\n      \n    \n        textImgGroupSecond  {\n           desc\n    fieldGroupName\n    \n        img  {\n           __typename\n    id\n          \n        }\n      \n    \n        img2  {\n           __typename\n    id\n          \n        }\n      \n    \n        img3  {\n           __typename\n    id\n          \n        }\n      \n    text\n          \n        }\n      \n    \n        twoImgs  {\n           \n        bigImg  {\n           __typename\n    id\n          \n        }\n      \n    desc\n    fieldGroupName\n    \n        smallImg  {\n           __typename\n    id\n          \n        }\n      \n          \n        }\n      \n    \n        verticalImgGroup  {\n           \n        bg  {\n           __typename\n    id\n          \n        }\n      \n    desc\n    fieldGroupName\n          \n        }\n      \n          \n        }\n      \n    \n        ancestors (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    \n        author  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    authorDatabaseId\n    authorId\n    \n        wpChildren: children (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    commentCount\n    commentStatus\n    \n        comments (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    content\n    \n        contentType  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    databaseId\n    date\n    dateGmt\n    desiredSlug\n    enclosure\n    \n        featuredImage  {\n           \n        node  {\n           __typename\n    id\n          \n        }\n      \n          \n        }\n      \n    featuredImageDatabaseId\n    featuredImageId\n    guid\n    id\n    isFrontPage\n    isPostsPage\n    isPrivacyPage\n    isRevision\n    \n        lastEditedBy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    link\n    menuOrder\n    modified\n    modifiedGmt\n    \n        wpParent: parent  {\n           \n        node  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    parentDatabaseId\n    parentId\n    \n        seo  {\n           \n        breadcrumbs  {\n           text\n    url\n          \n        }\n      \n    canonical\n    cornerstone\n    focuskw\n    metaDesc\n    metaKeywords\n    metaRobotsNofollow\n    metaRobotsNoindex\n    opengraphAuthor\n    opengraphDescription\n    \n        opengraphImage  {\n           __typename\n    id\n          \n        }\n      \n    opengraphModifiedTime\n    opengraphPublishedTime\n    opengraphPublisher\n    opengraphSiteName\n    opengraphTitle\n    opengraphType\n    opengraphUrl\n    \n        schema  {\n           articleType\n    pageType\n    raw\n          \n        }\n      \n    title\n    twitterDescription\n    \n        twitterImage  {\n           __typename\n    id\n          \n        }\n      \n    twitterTitle\n          \n        }\n      \n    slug\n    status\n    \n        template  {\n           templateName\n          \n      __typename\n      \n    \n        }\n      \n    title\n    uri\n    __typename","builtFragments":"","settings":{}},"postFormats":{"typeInfo":{"singularName":"postFormat","pluralName":"postFormats","nodesTypeName":"PostFormat"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){postFormats(first:$first,after:$after,){nodes{contentNodes(first:100){nodes{id __typename}}count databaseId description id link name posts(first:100){nodes{id}}seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug taxonomy{node{id}}termGroupId termTaxonomyId uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){postFormat(id:$id){contentNodes(first:100){nodes{id __typename}}count databaseId description id link name posts(first:100){nodes{id}}seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug taxonomy{node{id}}termGroupId termTaxonomyId uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){postFormat(id:$id,idType:ID,asPreview:true){contentNodes(first:100){nodes{id __typename}}count databaseId description id link name posts(first:100){nodes{id}}seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug taxonomy{node{id}}termGroupId termTaxonomyId uri __typename}}","selectionSet":" \n        contentNodes (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    count\n    databaseId\n    description\n    id\n    link\n    name\n    \n        posts (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        seo  {\n           \n        breadcrumbs  {\n           text\n    url\n          \n        }\n      \n    canonical\n    cornerstone\n    focuskw\n    metaDesc\n    metaKeywords\n    metaRobotsNofollow\n    metaRobotsNoindex\n    opengraphAuthor\n    opengraphDescription\n    \n        opengraphImage  {\n           __typename\n    id\n          \n        }\n      \n    opengraphModifiedTime\n    opengraphPublishedTime\n    opengraphPublisher\n    opengraphSiteName\n    opengraphTitle\n    opengraphType\n    opengraphUrl\n    \n        schema  {\n           raw\n          \n        }\n      \n    title\n    twitterDescription\n    \n        twitterImage  {\n           __typename\n    id\n          \n        }\n      \n    twitterTitle\n          \n        }\n      \n    slug\n    \n        taxonomy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    termGroupId\n    termTaxonomyId\n    uri\n    __typename","builtFragments":"","settings":{}},"posts":{"typeInfo":{"singularName":"post","pluralName":"posts","nodesTypeName":"Post"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){posts(first:$first,after:$after,){nodes{author{node{id}}authorDatabaseId authorId categories(first:100){nodes{id}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure excerpt featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId guid id isRevision isSticky lastEditedBy{node{id}}link modified modifiedGmt pingStatus pinged postFormats(first:100){nodes{id}}seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{articleType pageType raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug status tags(first:100){nodes{id}}template{templateName __typename}terms(first:100){nodes{id __typename}}title toPing uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){post(id:$id){author{node{id}}authorDatabaseId authorId categories(first:100){nodes{id}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure excerpt featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId guid id isRevision isSticky lastEditedBy{node{id}}link modified modifiedGmt pingStatus pinged postFormats(first:100){nodes{id}}seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{articleType pageType raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug status tags(first:100){nodes{id}}template{templateName __typename}terms(first:100){nodes{id __typename}}title toPing uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){post(id:$id,idType:ID,asPreview:true){author{node{id}}authorDatabaseId authorId categories(first:100){nodes{id}}commentCount commentStatus comments(first:100){nodes{id}}content contentType{node{id}}databaseId date dateGmt desiredSlug enclosure excerpt featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId guid id isRevision isSticky lastEditedBy{node{id}}link modified modifiedGmt pingStatus pinged postFormats(first:100){nodes{id}}seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{articleType pageType raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug status tags(first:100){nodes{id}}template{templateName __typename}terms(first:100){nodes{id __typename}}title toPing uri __typename}}","selectionSet":" \n        author  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    authorDatabaseId\n    authorId\n    \n        categories (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    commentCount\n    commentStatus\n    \n        comments (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    content\n    \n        contentType  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    databaseId\n    date\n    dateGmt\n    desiredSlug\n    enclosure\n    excerpt\n    \n        featuredImage  {\n           \n        node  {\n           __typename\n    id\n          \n        }\n      \n          \n        }\n      \n    featuredImageDatabaseId\n    featuredImageId\n    guid\n    id\n    isRevision\n    isSticky\n    \n        lastEditedBy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    link\n    modified\n    modifiedGmt\n    pingStatus\n    pinged\n    \n        postFormats (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        seo  {\n           \n        breadcrumbs  {\n           text\n    url\n          \n        }\n      \n    canonical\n    cornerstone\n    focuskw\n    metaDesc\n    metaKeywords\n    metaRobotsNofollow\n    metaRobotsNoindex\n    opengraphAuthor\n    opengraphDescription\n    \n        opengraphImage  {\n           __typename\n    id\n          \n        }\n      \n    opengraphModifiedTime\n    opengraphPublishedTime\n    opengraphPublisher\n    opengraphSiteName\n    opengraphTitle\n    opengraphType\n    opengraphUrl\n    \n        schema  {\n           articleType\n    pageType\n    raw\n          \n        }\n      \n    title\n    twitterDescription\n    \n        twitterImage  {\n           __typename\n    id\n          \n        }\n      \n    twitterTitle\n          \n        }\n      \n    slug\n    status\n    \n        tags (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        template  {\n           templateName\n          \n      __typename\n      \n    \n        }\n      \n    \n        terms (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    title\n    toPing\n    uri\n    __typename","builtFragments":"","settings":{}},"produkty":{"typeInfo":{"singularName":"produkt","pluralName":"produkty","nodesTypeName":"Produkt"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){produkty(first:$first,after:$after,){nodes{SingleProduct{crossProducts{__typename ... on Produkt{id}}demensions{fieldGroupName row1{fieldGroupName name value}title}details{fieldGroupName row{fieldGroupName name value}title}detailsImg{__typename id}fieldGroupName gallery{__typename id}imageCta{bg{__typename id}fieldGroupName link{target title url}text}productDetails{fieldGroupName productDesc productDetails productExtra}productPng{__typename id}textImage{desc fieldGroupName img{__typename id}subtitle title}}contentType{node{id}}databaseId date dateGmt desiredSlug enclosure featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId guid id kolekcje(first:100){nodes{id}}lastEditedBy{node{id}}link modified modifiedGmt seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{articleType pageType raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug status template{templateName __typename}title uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){produkt(id:$id){SingleProduct{crossProducts{__typename ... on Produkt{id}}demensions{fieldGroupName row1{fieldGroupName name value}title}details{fieldGroupName row{fieldGroupName name value}title}detailsImg{__typename id}fieldGroupName gallery{__typename id}imageCta{bg{__typename id}fieldGroupName link{target title url}text}productDetails{fieldGroupName productDesc productDetails productExtra}productPng{__typename id}textImage{desc fieldGroupName img{__typename id}subtitle title}}contentType{node{id}}databaseId date dateGmt desiredSlug enclosure featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId guid id kolekcje(first:100){nodes{id}}lastEditedBy{node{id}}link modified modifiedGmt seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{articleType pageType raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug status template{templateName __typename}title uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){produkt(id:$id,idType:ID,asPreview:true){SingleProduct{crossProducts{__typename ... on Produkt{id}}demensions{fieldGroupName row1{fieldGroupName name value}title}details{fieldGroupName row{fieldGroupName name value}title}detailsImg{__typename id}fieldGroupName gallery{__typename id}imageCta{bg{__typename id}fieldGroupName link{target title url}text}productDetails{fieldGroupName productDesc productDetails productExtra}productPng{__typename id}textImage{desc fieldGroupName img{__typename id}subtitle title}}contentType{node{id}}databaseId date dateGmt desiredSlug enclosure featuredImage{node{__typename id}}featuredImageDatabaseId featuredImageId guid id kolekcje(first:100){nodes{id}}lastEditedBy{node{id}}link modified modifiedGmt seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{articleType pageType raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug status template{templateName __typename}title uri __typename}}","selectionSet":" \n        SingleProduct  {\n           \n        crossProducts  {\n          \n          \n      __typename\n      \n  ... on Produkt {\n     id\n  }\n\n    \n        }\n      \n    \n        demensions  {\n           fieldGroupName\n    \n        row1  {\n           fieldGroupName\n    name\n    value\n          \n        }\n      \n    title\n          \n        }\n      \n    \n        details  {\n           fieldGroupName\n    \n        row  {\n           fieldGroupName\n    name\n    value\n          \n        }\n      \n    title\n          \n        }\n      \n    \n        detailsImg  {\n           __typename\n    id\n          \n        }\n      \n    fieldGroupName\n    \n        gallery  {\n           __typename\n    id\n          \n        }\n      \n    \n        imageCta  {\n           \n        bg  {\n           __typename\n    id\n          \n        }\n      \n    fieldGroupName\n    \n        link  {\n           target\n    title\n    url\n          \n        }\n      \n    text\n          \n        }\n      \n    \n        productDetails  {\n           fieldGroupName\n    productDesc\n    productDetails\n    productExtra\n          \n        }\n      \n    \n        productPng  {\n           __typename\n    id\n          \n        }\n      \n    \n        textImage  {\n           desc\n    fieldGroupName\n    \n        img  {\n           __typename\n    id\n          \n        }\n      \n    subtitle\n    title\n          \n        }\n      \n          \n        }\n      \n    \n        contentType  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    databaseId\n    date\n    dateGmt\n    desiredSlug\n    enclosure\n    \n        featuredImage  {\n           \n        node  {\n           __typename\n    id\n          \n        }\n      \n          \n        }\n      \n    featuredImageDatabaseId\n    featuredImageId\n    guid\n    id\n    \n        kolekcje (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        lastEditedBy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    link\n    modified\n    modifiedGmt\n    \n        seo  {\n           \n        breadcrumbs  {\n           text\n    url\n          \n        }\n      \n    canonical\n    cornerstone\n    focuskw\n    metaDesc\n    metaKeywords\n    metaRobotsNofollow\n    metaRobotsNoindex\n    opengraphAuthor\n    opengraphDescription\n    \n        opengraphImage  {\n           __typename\n    id\n          \n        }\n      \n    opengraphModifiedTime\n    opengraphPublishedTime\n    opengraphPublisher\n    opengraphSiteName\n    opengraphTitle\n    opengraphType\n    opengraphUrl\n    \n        schema  {\n           articleType\n    pageType\n    raw\n          \n        }\n      \n    title\n    twitterDescription\n    \n        twitterImage  {\n           __typename\n    id\n          \n        }\n      \n    twitterTitle\n          \n        }\n      \n    slug\n    status\n    \n        template  {\n           templateName\n          \n      __typename\n      \n    \n        }\n      \n    title\n    uri\n    __typename","builtFragments":"","settings":{}},"tags":{"typeInfo":{"singularName":"tag","pluralName":"tags","nodesTypeName":"Tag"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){tags(first:$first,after:$after,){nodes{contentNodes(first:100){nodes{id __typename}}count databaseId description id link name posts(first:100){nodes{id}}seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug taxonomy{node{id}}termGroupId termTaxonomyId uri __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){tag(id:$id){contentNodes(first:100){nodes{id __typename}}count databaseId description id link name posts(first:100){nodes{id}}seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug taxonomy{node{id}}termGroupId termTaxonomyId uri __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){tag(id:$id,idType:ID,asPreview:true){contentNodes(first:100){nodes{id __typename}}count databaseId description id link name posts(first:100){nodes{id}}seo{breadcrumbs{text url}canonical cornerstone focuskw metaDesc metaKeywords metaRobotsNofollow metaRobotsNoindex opengraphAuthor opengraphDescription opengraphImage{__typename id}opengraphModifiedTime opengraphPublishedTime opengraphPublisher opengraphSiteName opengraphTitle opengraphType opengraphUrl schema{raw}title twitterDescription twitterImage{__typename id}twitterTitle}slug taxonomy{node{id}}termGroupId termTaxonomyId uri __typename}}","selectionSet":" \n        contentNodes (first: 100) {\n           \n        nodes  {\n           id\n    __typename\n          \n        }\n      \n          \n        }\n      \n    count\n    databaseId\n    description\n    id\n    link\n    name\n    \n        posts (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        seo  {\n           \n        breadcrumbs  {\n           text\n    url\n          \n        }\n      \n    canonical\n    cornerstone\n    focuskw\n    metaDesc\n    metaKeywords\n    metaRobotsNofollow\n    metaRobotsNoindex\n    opengraphAuthor\n    opengraphDescription\n    \n        opengraphImage  {\n           __typename\n    id\n          \n        }\n      \n    opengraphModifiedTime\n    opengraphPublishedTime\n    opengraphPublisher\n    opengraphSiteName\n    opengraphTitle\n    opengraphType\n    opengraphUrl\n    \n        schema  {\n           raw\n          \n        }\n      \n    title\n    twitterDescription\n    \n        twitterImage  {\n           __typename\n    id\n          \n        }\n      \n    twitterTitle\n          \n        }\n      \n    slug\n    \n        taxonomy  {\n           \n        node  {\n           id\n          \n        }\n      \n          \n        }\n      \n    termGroupId\n    termTaxonomyId\n    uri\n    __typename","builtFragments":"","settings":{}},"taxonomies":{"typeInfo":{"singularName":"taxonomy","pluralName":"taxonomies","nodesTypeName":"Taxonomy"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){taxonomies(first:$first,after:$after,){nodes{archivePath connectedContentTypes(first:100){nodes{id}}description graphqlPluralName graphqlSingleName hierarchical id label name public restBase restControllerClass showCloud showInAdminColumn showInGraphql showInMenu showInNavMenus showInQuickEdit showInRest showUi __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){taxonomy(id:$id){archivePath connectedContentTypes(first:100){nodes{id}}description graphqlPluralName graphqlSingleName hierarchical id label name public restBase restControllerClass showCloud showInAdminColumn showInGraphql showInMenu showInNavMenus showInQuickEdit showInRest showUi __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){taxonomy(id:$id,idType:ID,asPreview:true){archivePath connectedContentTypes(first:100){nodes{id}}description graphqlPluralName graphqlSingleName hierarchical id label name public restBase restControllerClass showCloud showInAdminColumn showInGraphql showInMenu showInNavMenus showInQuickEdit showInRest showUi __typename}}","selectionSet":" archivePath\n    \n        connectedContentTypes (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    description\n    graphqlPluralName\n    graphqlSingleName\n    hierarchical\n    id\n    label\n    name\n    public\n    restBase\n    restControllerClass\n    showCloud\n    showInAdminColumn\n    showInGraphql\n    showInMenu\n    showInNavMenus\n    showInQuickEdit\n    showInRest\n    showUi\n    __typename","builtFragments":"","settings":{}},"userRoles":{"typeInfo":{"singularName":"userRole","pluralName":"userRoles","nodesTypeName":"UserRole"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){userRoles(first:$first,after:$after,){nodes{capabilities displayName id name __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){userRole(id:$id){capabilities displayName id name __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){userRole(id:$id,idType:ID,asPreview:true){capabilities displayName id name __typename}}","selectionSet":" capabilities\n    displayName\n    id\n    name\n    __typename","builtFragments":"","settings":{}},"users":{"typeInfo":{"singularName":"user","pluralName":"users","nodesTypeName":"User"},"nodeListQueries":[" query NODE_LIST_QUERY($first:Int!,$after:String,){users(first:$first,after:$after,){nodes{avatar{default extraAttr forceDefault foundAvatar height rating scheme size url width}capKey capabilities comments(first:100){nodes{id}}databaseId description email extraCapabilities firstName id lastName locale name nicename nickname pages(first:100){nodes{id}}posts(first:100){nodes{id}}registeredDate roles(first:100){nodes{id}}seo{metaDesc metaRobotsNofollow metaRobotsNoindex schema{raw}social{facebook instagram linkedIn mySpace pinterest soundCloud twitter wikipedia youTube}title}slug uri url username __typename}pageInfo{hasNextPage endCursor}}}"],"nodeQuery":" query SINGLE_CONTENT_QUERY($id:ID!){user(id:$id){avatar{default extraAttr forceDefault foundAvatar height rating scheme size url width}capKey capabilities comments(first:100){nodes{id}}databaseId description email extraCapabilities firstName id lastName locale name nicename nickname pages(first:100){nodes{id}}posts(first:100){nodes{id}}registeredDate roles(first:100){nodes{id}}seo{metaDesc metaRobotsNofollow metaRobotsNoindex schema{raw}social{facebook instagram linkedIn mySpace pinterest soundCloud twitter wikipedia youTube}title}slug uri url username __typename}}","previewQuery":" query PREVIEW_QUERY($id:ID!){user(id:$id,idType:ID,asPreview:true){avatar{default extraAttr forceDefault foundAvatar height rating scheme size url width}capKey capabilities comments(first:100){nodes{id}}databaseId description email extraCapabilities firstName id lastName locale name nicename nickname pages(first:100){nodes{id}}posts(first:100){nodes{id}}registeredDate roles(first:100){nodes{id}}seo{metaDesc metaRobotsNofollow metaRobotsNoindex schema{raw}social{facebook instagram linkedIn mySpace pinterest soundCloud twitter wikipedia youTube}title}slug uri url username __typename}}","selectionSet":" \n        avatar  {\n           default\n    extraAttr\n    forceDefault\n    foundAvatar\n    height\n    rating\n    scheme\n    size\n    url\n    width\n          \n        }\n      \n    capKey\n    capabilities\n    \n        comments (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    databaseId\n    description\n    email\n    extraCapabilities\n    firstName\n    id\n    lastName\n    locale\n    name\n    nicename\n    nickname\n    \n        pages (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        posts (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    registeredDate\n    \n        roles (first: 100) {\n           \n        nodes  {\n           id\n          \n        }\n      \n          \n        }\n      \n    \n        seo  {\n           metaDesc\n    metaRobotsNofollow\n    metaRobotsNoindex\n    \n        schema  {\n           raw\n          \n        }\n      \n    \n        social  {\n           facebook\n    instagram\n    linkedIn\n    mySpace\n    pinterest\n    soundCloud\n    twitter\n    wikipedia\n    youTube\n          \n        }\n      \n    title\n          \n        }\n      \n    slug\n    uri\n    url\n    username\n    __typename","builtFragments":"","settings":{}}}}